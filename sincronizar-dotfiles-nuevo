#!/bin/bash

#Este script ha de mantenerse en el directorio de git donde se requieren los dotfiles, de lo contrario cd $(dirname $(realpath $0)) fallará.
#Este script tiene rsync, git, coreutils, sudo y bash como dependencias

# LISTA DE ARCHIVOS QUE SIGO
# - Este (sincronizar-dotfiles)
# - archconfig
# - archpaquetes
# - Xresources
# - zshrc
# - kitty.conf
# - polybar
# - bspwm
# - sxhkd
# - nano
# - micro

#Las rutas a los dotfiles han de especificarse en el array DOTFILES
declare -a DOTFILES=("$HOME/.Xresources" "$HOME/.zshrc" "$HOME/.config/kitty" "$HOME/.config/polybar" "$HOME/.config/bspwm" "$HOME/.config/sxhkd" "$HOME/.nanorc" "$HOME/.config/micro")

echo "+----------------------+
|  1 · Sincronizar     |
|  2 · Subir a GITHUB  |
|  3 · Exportar al PC  |
+----------------------+"
read -p "Escoge: " dec 

cd $(dirname $(realpath $0))

if [ $dec -eq 1 ]; then
		sudo rsync -aAXv ${DOTFILES[@]} . #Esto no funciona, no reconoce los directorios dentro de un array
		ls -hNa --color=auto --group-directories-first
		
elif [ $dec -eq 2 ]; then
		git add --all ; git status; echo " "
		read -p "Commit? [Y/N]: " a; if [[ $a =~ ^[Yy]$ ]]; then git commit -m "`date`"; fi
		read -p "Push? [Y/N]: " b; if [[ $b =~ ^[Yy]$ ]]; then git push origin master; fi

elif [ $dec -eq 3 ]; then
		[ -d "~/.config" ] && mkdir ~/.config
		for i in ${DOTFILES[@]}; do
		echo $i #Script real -> sudo rsync -aAXv --delete pene ~/          Hay que usar grep para determinar cóm se llama el archivo en git y dónde colocarlo
		done
else echo "You had one job." ; fi




#Hacer que reconozca atributos?